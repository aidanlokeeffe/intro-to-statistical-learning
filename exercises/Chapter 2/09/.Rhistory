Auto = read.csv("Auto.csv", header=TRUE, na.strings="?")
Auto = na.omit(Auto)
View(Auto)
names(Auto)
range(Auto)
range(Auto[,-c(8,9)])
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(range(Auto[,i]))
}
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
print()
}
print(" ")
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
print(" ")
}
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
print("\n")
}
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
print(c())
}
print(range(Auto[,i]))
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
}
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:8){
print(names(Auto)[i])
print(range(Auto[,i]))
}
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
for (i in 1:7){
print(names(Auto)[i])
print(range(Auto[,i]))
}
# c) What is the mean and standard deviation of each quantitative predictor?
mean(Auto[,-c(8,9)])
# c) What is the mean and standard deviation of each quantitative predictor?
summary(Auto)
print(sd(Auto[,i]))
# c) What is the mean and standard deviation of each quantitative predictor?
for (i in 1:7){
print(names(Auto)[i])
print(mean(Auto[,i]))
print(sd(Auto[,i]))
}
df = Data.Frame(c(1,2), c(3,4))
df = data.frame(c(1,2), c(3,4))
df
df = data.frame(df, c(5,6))
df
range(Auto[,1])
range(Auto[,1])[1]
range(Auto[,1])[2]
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
# c) What is the mean and standard deviation of each quantitative predictor?
df = data.frame(c(range(Auto[,1]), mean(Auto[,1]), sd(Auto[,1])))
df
for (i in 2:7){
df = df(df, c(range(Auto[,i]), mean(Auto[,i]), sd(Auto[,i])))
}
for (i in 2:7){
df = data.frame(df, c(range(Auto[,i]), mean(Auto[,i]), sd(Auto[,i])))
}
names(df) = names(Auto)[,-c(8,9)]
names(df) = names(Auto)[-c(8,9)]
df
rownames(df) = c("min", "max", "mean", "sd")
df
df
# d) Now remove the 10th through 85th observations. What is the range, mean, and standard deviation
# of each predictor in the subset of the data that remains.
df2 = df[-10:85,]
# d) Now remove the 10th through 85th observations. What is the range, mean, and standard deviation
# of each predictor in the subset of the data that remains.
df2 = df[-c(10:85),]
# d) Now remove the 10th through 85th observations. What is the range, mean, and standard deviation
# of each predictor in the subset of the data that remains.
Auto2 = Auto[- 10:85,]
(1:10)
c(1:10)
# d) Now remove the 10th through 85th observations. What is the range, mean, and standard deviation
# of each predictor in the subset of the data that remains.
Auto2 = Auto[-c(10:85),]
df = data.frame(c(range(Auto2[,1]), mean(Auto2[,1]), sd(Auto2[,1])))
for (i in 2:7){
df = data.frame(df, c(range(Auto2[,i]), mean(Auto2[,i]), sd(Auto2[,i])))
}
names(df) = names(Auto2)[-c(8,9)]
rownames(df) = c("min", "max", "mean", "sd")
df
# b) What is the range of each quantitative predictor? You can answer this using the range() function.
# c) What is the mean and standard deviation of each quantitative predictor?
df = data.frame(c(range(Auto[,1]), mean(Auto[,1]), sd(Auto[,1])))
for (i in 2:7){
df = data.frame(df, c(range(Auto[,i]), mean(Auto[,i]), sd(Auto[,i])))
}
names(df) = names(Auto)[-c(8,9)]
rownames(df) = c("min", "max", "mean", "sd")
df
# d) Now remove the 10th through 85th observations. What is the range, mean, and standard deviation
# of each predictor in the subset of the data that remains.
Auto2 = Auto[-c(10:85),]
df2 = data.frame(c(range(Auto2[,1]), mean(Auto2[,1]), sd(Auto2[,1])))
for (i in 2:7){
df2 = data.frame(df2, c(range(Auto2[,i]), mean(Auto2[,i]), sd(Auto2[,i])))
}
names(df2) = names(Auto2)[-c(8,9)]
rownames(df2) = c("min", "max", "mean", "sd")
df2
df
df2
pairs(Auto)
pairs(Auto[,-c(8,9)])
